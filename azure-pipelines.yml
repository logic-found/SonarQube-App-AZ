trigger: none

pool:
  vmImage: ubuntu-latest

variables:
  app_name: 'app-rashika-sonarqube'
  rg_name: 'rg-rashika-sonarqube'
  img_name: 'md-sonarqube-lts-img'

stages:
- stage: CI
  jobs:
  - job: CI
    displayName: CI
    steps:
    - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@1
      displayName: Terraform Install
      inputs:
        terraformVersion: 'latest'
        
    - task: TerraformTaskV4@4
      displayName: Terraform Init
      inputs:
        provider: 'azurerm'
        command: 'init'
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform-sonarqube-webapp-poc'
        backendServiceArm: ''
        backendAzureRmResourceGroupName: 'rg'
        backendAzureRmStorageAccountName: 'storageaccountrashika'
        backendAzureRmContainerName: 'terraform'
        backendAzureRmKey: 'terraform.tfstate'
    - task: TerraformTaskV4@4
      displayName: Terraform Plan
      inputs:
        provider: 'azurerm'
        command: 'plan'
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform-sonarqube-webapp-poc'
        environmentServiceNameAzureRM: ''

    - task: TerraformTaskV4@4
      displayName: Terraform Apply
      inputs:
        provider: 'azurerm'
        command: 'apply'
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform-sonarqube-webapp-poc'
        environmentServiceNameAzureRM: ''
    - task: AzureCLI@2
      displayName: 'Deploy sonarqube img on App service'
      inputs:
        azureSubscription: ''
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: 'az webapp config container set --name $(app_name) --resource-group $(rg_name) --container-image-name $(acr_username).azurecr.io/$(img_name):latest --container-registry-url https://$(acr_username).azurecr.io --container-registry-user $(acr_username) --container-registry-password $(acr_password)'

          
